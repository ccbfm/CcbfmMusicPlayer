apply plugin: 'com.android.application'
apply plugin: 'ccbfm.android.aspectj.plugin'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.ccbfm.music.player"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        buildConfigField "boolean", "LOG_DISABLE", "false"
        buildConfigField "int", "LOG_LEVEL", "3"
    }

    signingConfigs {
        debug {
            storeFile file("${projectDir}${File.separator}keystore.jks")
            storePassword 'ccbfmmusic'
            keyAlias = 'ccbfmmusic'
            keyPassword 'ccbfmmusic'
            v1SigningEnabled true
            v2SigningEnabled true

        }
        release {
            storeFile file("${projectDir}${File.separator}keystore.jks")
            storePassword 'ccbfmmusic'
            keyPassword 'ccbfmmusic'
            keyAlias = 'ccbfmmusic'
            v1SigningEnabled true
            v2SigningEnabled true

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField("boolean", "LOG_DISABLE", "true")
            buildConfigField "int", "LOG_LEVEL", "6"
        }

        debug {
            signingConfig signingConfigs.debug
            buildConfigField("boolean", "LOG_DISABLE", "false")
            buildConfigField "int", "LOG_LEVEL", "3"
        }
    }

    dataBinding {
        enabled = true
    }

    applicationVariants.all { variant ->
        getPackageApplicationProvider().get()
        variant.outputs.all {
            //改名字
            def flag = outputFileName.contains("release")
            def type = flag ? "release" : "debug"
            outputFileName = "MusicPlayer_${type}_${variant.versionName}.apk"
            if (flag) {
                def outDir = "${rootDir}${File.separator}musicBuild${File.separator}"
                variant.getPackageApplicationProvider().get().outputDirectory = new File(outDir)
            }
        }
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    //计算float类型 density
    implementation 'com.github.ccbfm:screen-adapter:1.0.1'
    implementation "com.github.ccbfm:android-permission:1.1.0"
    //LitePal
    implementation 'org.litepal.android:java:3.0.0'
    //
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
}
